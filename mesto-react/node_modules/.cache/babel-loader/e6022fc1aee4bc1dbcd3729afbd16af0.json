{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\rose3\\\\OneDrive\\\\Desktop\\\\dev\\\\mesto-react\\\\mesto-react\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\rose3\\\\OneDrive\\\\Desktop\\\\dev\\\\mesto-react\\\\mesto-react\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_parseResponse\",value:function _parseResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}// Получение карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){var _this=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(function(res){return _this._parseResponse(res);});}// Добавление новой карточки через попап\n},{key:\"addCard\",value:function addCard(data){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(function(res){return _this2._parseResponse(res);});}// Удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId){var _this3=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){return _this3._parseResponse(res);});}// Ставим лайк карточке\n},{key:\"setLike\",value:function setLike(cardId){var _this4=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(function(res){return _this4._parseResponse(res);});}// Удаляем лайк\n},{key:\"deleteLike\",value:function deleteLike(cardId){var _this5=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(function(res){return _this5._parseResponse(res);});}// Получение информации о пользователе с сервера\n},{key:\"getUserInfo\",value:function getUserInfo(){var _this6=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(function(res){return _this6._parseResponse(res);});}// Редактирование информации о пользователе через попап\n},{key:\"editUserInfo\",value:function editUserInfo(data){var _this7=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.username,about:data.job})}).then(function(res){return _this7._parseResponse(res);});}// Редактирование аватара пользователя через попап\n},{key:\"editAvatar\",value:function editAvatar(data){var _this8=this;return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(function(res){return _this8._parseResponse(res);});}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-31',headers:{authorization:'26da26a8-d945-47d3-8e71-ad9465211601','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["C:/Users/rose3/OneDrive/desktop/dev/mesto-react/mesto-react/src/utils/api.js"],"names":["Api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_parseResponse","data","method","body","JSON","stringify","name","link","cardId","username","about","job","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  // Получение карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Добавление новой карточки через попап\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Ставим лайк карточке\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Удаляем лайк\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Редактирование информации о пользователе через попап\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.job\n      })\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Редактирование аватара пользователя через попап\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n      .then(res => this._parseResponse(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-31',\n  headers: {\n    authorization: '26da26a8-d945-47d3-8e71-ad9465211601',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n\n\n"]},"metadata":{},"sourceType":"module"}