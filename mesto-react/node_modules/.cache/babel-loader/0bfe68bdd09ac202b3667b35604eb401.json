{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  } // Получение карточек с сервера\n\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Добавление новой карточки через попап\n\n\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._parseResponse(res));\n  } // Удаление карточки\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Ставим лайк карточке\n\n\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Удаляем лайк\n\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Получение информации о пользователе с сервера\n\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Редактирование информации о пользователе через попап\n\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.job\n      })\n    }).then(res => this._parseResponse(res));\n  } // Редактирование аватара пользователя через попап\n\n\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-31',\n  headers: {\n    authorization: '26da26a8-d945-47d3-8e71-ad9465211601',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/rose3/OneDrive/desktop/dev/mesto-react/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_parseResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","addCard","data","method","body","JSON","stringify","name","link","deleteCard","cardId","setLike","deleteLike","getUserInfo","editUserInfo","username","about","job","editAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["\n\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  // Получение карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Добавление новой карточки через попап\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Ставим лайк карточке\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Удаляем лайк\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Редактирование информации о пользователе через попап\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.job\n      })\n    })\n      .then(res => this._parseResponse(res));\n  }\n\n  // Редактирование аватара пользователя через попап\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n      .then(res => this._parseResponse(res));\n  }\n}\n\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-31',\n  headers: {\n    authorization: '26da26a8-d945-47d3-8e71-ad9465211601',\n    'Content-Type': 'application/json'\n  }\n});\n\n\nexport default api;\n\n\n"]},"metadata":{},"sourceType":"module"}